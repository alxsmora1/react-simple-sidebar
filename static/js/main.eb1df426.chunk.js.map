{"version":3,"sources":["components/Sidebar.js","components/Navbar.js","components/TableExample.js","components/NoMatch.js","layouts/Layout.js","App.js","serviceWorker.js","index.js"],"names":["SimpleSidebar","className","id","NavLink","to","tag","Link","icon","faHome","Nav","NavItem","React","Component","SimpleNavbar","props","Icon","useState","isOpen","setIsOpen","sidebarOpen","faArrowLeft","faArrowRight","Navbar","color","dark","expand","Button","onClick","openSidebar","NavbarToggler","Collapse","navbar","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","TableExample","Card","CardHeader","CardBody","Row","Col","md","Table","scope","NoMatch","Layout","state","setState","basename","this","Sidebar","Container","exact","path","render","target","rel","href","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eb1df426.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass SimpleSidebar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"bg-light border-right\" id=\"sidebar-wrapper\">\r\n        <NavLink className=\"sidebar-heading text-dark\" to=\"/\" tag={Link}>\r\n          <FontAwesomeIcon icon={faHome} /> Simple Sidebar\r\n        </NavLink>\r\n        <Nav className=\"list-group list-group-flush\">\r\n          <NavItem>\r\n            <NavLink\r\n              to=\"/table\"\r\n              tag={Link}\r\n              className=\"list-group-item list-group-item-action bg-light\"\r\n            >\r\n              {\" \"}\r\n              Table\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              to=\"/hello\"\r\n              tag={Link}\r\n              className=\"list-group-item list-group-item-action bg-light\"\r\n            >\r\n              {\" \"}\r\n              Hello World!\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              to=\"/error\"\r\n              tag={Link}\r\n              className=\"list-group-item list-group-item-action bg-light\"\r\n            >\r\n              {\" \"}\r\n              Error 404\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleSidebar;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Nav,\r\n  Navbar,\r\n  Collapse,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  NavbarToggler,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SimpleNavbar = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const sidebar = () => {\r\n    props.openSidebar();\r\n  };\r\n\r\n  let Icon;\r\n  if (props.sidebarOpen) {\r\n    Icon = <FontAwesomeIcon icon={faArrowLeft} />;\r\n  } else {\r\n    Icon = <FontAwesomeIcon icon={faArrowRight} />;\r\n  }\r\n\r\n  return (\r\n    <Navbar color=\"dark\" dark expand=\"md\">\r\n      <Button className=\"btn btn-primary\" onClick={sidebar} id=\"menu-toggle\">\r\n        {Icon}\r\n      </Button>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink to=\"/users\" tag={Link}>\r\n              Users\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/task\" tag={Link}>\r\n              Task\r\n            </NavLink>\r\n          </NavItem>\r\n          <UncontrolledDropdown nav inNavbar>\r\n            <DropdownToggle nav caret>\r\n              Menu\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n              <DropdownItem to=\"/contact\" tag={Link}>\r\n                Contact\r\n              </DropdownItem>\r\n              <DropdownItem to=\"/about\" tag={Link}>\r\n                About\r\n              </DropdownItem>\r\n              <DropdownItem to=\"/map\" tag={Link}>\r\n                Map\r\n              </DropdownItem>\r\n              <DropdownItem to=\"/tools\" tag={Link}>\r\n                Tools\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n          <NavItem>\r\n            <NavLink to=\"Logout\" tag={Link}>\r\n              Logout\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default SimpleNavbar;\r\n","import React from \"react\";\r\n\r\nimport { Row, Col, Card, CardHeader, CardBody, Table } from \"reactstrap\";\r\n\r\nclass TableExample extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Card className=\"shadow\">\r\n          <CardHeader>\r\n            <h3>Example Table</h3>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Row>\r\n              <Col md={12}>\r\n                <Table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>First Name</th>\r\n                      <th>Last Name</th>\r\n                      <th>Username</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">1</th>\r\n                      <td>First Name</td>\r\n                      <td>Last Name</td>\r\n                      <td>Username</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">2</th>\r\n                      <td>First Name</td>\r\n                      <td>Last Name</td>\r\n                      <td>Username</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">3</th>\r\n                      <td>First Name</td>\r\n                      <td>Last Name</td>\r\n                      <td>Username</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableExample;\r\n","import React from \"react\";\r\n\r\nexport default class NoMatch extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1> Error 404 </h1>\r\n        <h4>Page not Found</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\n\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\n\nimport Sidebar from \"../components/Sidebar\";\nimport Navbar from \"../components/Navbar\";\nimport TableExample from \"../components/TableExample\";\nimport NoMatch from \"../components/NoMatch\";\n\nclass Layout extends React.Component {\n  state = {\n    sidebarOpen: true,\n    className: \"d-flex \",\n  };\n\n  openSidebar = () => {\n    if (this.state.sidebarOpen) {\n      this.setState({\n        sidebarOpen: false,\n        className: \"d-flex toggled\",\n      });\n    } else {\n      this.setState({\n        sidebarOpen: true,\n        className: \"d-flex\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <div className={this.state.className} id=\"wrapper\">\n          <Sidebar />\n          <div id=\"page-content-wrapper\">\n            <Navbar\n              openSidebar={this.openSidebar}\n              sidebarOpen={this.state.sidebarOpen}\n            />\n            <br />\n            <Container>\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={() => {\n                    return (\n                      <div>\n                        <h1>Welcome to React Simple Sidebar</h1>\n                        <br />\n                        <h3>\n                          Based on Simple Sidebar by{\" \"}\n                          <a\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href=\"https://startbootstrap.com/templates/simple-sidebar/\"\n                          >\n                            StartBootstap\n                          </a>\n                        </h3>\n                      </div>\n                    );\n                  }}\n                ></Route>\n                <Route\n                  exact\n                  path=\"/table\"\n                  render={() => {\n                    return (\n                      <div>\n                        <TableExample />\n                      </div>\n                    );\n                  }}\n                ></Route>\n                <Route\n                  exact\n                  path=\"/hello\"\n                  render={() => {\n                    return (\n                      <div>\n                        <h1>Hello World!</h1>\n                      </div>\n                    );\n                  }}\n                ></Route>\n                <Route>\n                  <NoMatch />\n                </Route>\n              </Switch>\n            </Container>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Layout;\n","import React, { Component } from \"react\";\r\n\r\nimport \"./css/simple-sidebar.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Layout from \"./layouts/Layout.js\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}